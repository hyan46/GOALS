setwd("C:/Users/kevin/Dropbox/Research/ProjectInSNCP/SNCP_quantile/Simulation/Sensitivity_BIC")
rm(list=ls())
library(doParallel)
library(foreach)
library(quantreg)
# registerDoParallel(24)
### DGP
ts_settings0 <- list(
list(cpt_relative=c(0,0.15,0.35,0.6,0.8,1), ###Australia setting
b_slope=c(-23,-3,19,-14,-3), b0=6),
list(cpt_relative=c(0,0.1,0.4,0.6,0.8,1),   ###US setting 2
b_slope=c(45,-1.3,7.5,-4,6), b0=5.5),
list(cpt_relative=c(0,0.10,0.3,0.55,0.8,1), ###UK setting 2
b_slope=c(26,2,-7,4,11), b0=5.8))
### generating simulation date
reptime <- 1000
n_sets0 <- 210
sigma_sets0 <- c(0.1)
rho_sets0 <- 0.3
parameter_list <- cbind(c(0.06,rep(c(0.08,0.1,0.12,0.15),each=2)), c(0.01,rep(c(0.01,0.02),4)))
tau_sets <- c(0.1,0.5,0.9)
hetero_sets0 <- c(F) # heteroscedastic error
critical_table <- read.csv("./SN_MultipleSlope_CriticalValue.csv")
n <- 210
ts_settingnum <- 2
ts_setting <- ts_settings0[[ts_settingnum]]
cpt_relative <- ts_setting$cpt_relative
b_slope <- ts_setting$b_slope
b0 <- ts_setting$b0
sigma <- 0.2
rho <- 0.3
hetero <- T
load(paste0('./RData/Setting', ts_settingnum, '_quantile_pool_simu_sensitivity_', 'hetero', hetero, '_sigma', sigma, '_rho', rho, '.RData'))
source("./Util_pool.R")
source("./Util_SN.R")
source("./Util_BIC.R")
j=622
BIC_factor <- 0
tau_sets <- c(0.1,0.5,0.9)
sum_90 <- sum_95 <- list()
BIC90_individual_model_V23_stau <- BIC90_individual_model_V24_stau <- c()
BIC95_individual_model_V23_stau <- BIC95_individual_model_V24_stau <- c()
BIC90_individual_model_V23_mtau <- BIC90_individual_model_V24_mtau <- c()
BIC95_individual_model_V23_mtau <- BIC95_individual_model_V24_mtau <- c()
y <- data[j,]
for (par in 1:nrow(parameter_list)){
grid <- parameter_list[par,1]
trim <- parameter_list[par,2]
critical_sets <- subset(critical_table, epsilon==grid&delta==trim)
critical_sets <- unlist(critical_sets)[3:5]
grid_size <- round(n*grid) # round grid size
trim_size <- ceiling(n*trim) # ceiling trim size
SN_result90 <- final_result[[j]]$result[[par]]$SN_result90
SN_result95 <- final_result[[j]]$result[[par]]$SN_result95
SN_result99 <- final_result[[j]]$result[[par]]$SN_result99
# BIC for individual models at tau=0.5
BIC90_individual_model_V23_stau[par] <- BIC_cal_LeeNohPark_V23(y, c(0,SN_result90,n), tau_sets=0.5, BIC_factor=BIC_factor)
BIC90_individual_model_V24_stau[par] <- BIC_cal_LeeNohPark_V24(y, c(0,SN_result90,n), tau_sets=0.5, BIC_factor=BIC_factor)
BIC95_individual_model_V23_stau[par] <- BIC_cal_LeeNohPark_V23(y, c(0,SN_result95,n), tau_sets=0.5, BIC_factor=BIC_factor)
BIC95_individual_model_V24_stau[par] <- BIC_cal_LeeNohPark_V24(y, c(0,SN_result95,n), tau_sets=0.5, BIC_factor=BIC_factor)
# BIC for individual models at tau=(0.1,0.5,0.9)
BIC90_individual_model_V23_mtau[par] <- BIC_cal_LeeNohPark_V23(y, c(0,SN_result90,n), tau_sets=tau_sets, BIC_factor=BIC_factor)
BIC90_individual_model_V24_mtau[par] <- BIC_cal_LeeNohPark_V24(y, c(0,SN_result90,n), tau_sets=tau_sets, BIC_factor=BIC_factor)
BIC95_individual_model_V23_mtau[par] <- BIC_cal_LeeNohPark_V23(y, c(0,SN_result95,n), tau_sets=tau_sets, BIC_factor=BIC_factor)
BIC95_individual_model_V24_mtau[par] <- BIC_cal_LeeNohPark_V24(y, c(0,SN_result95,n), tau_sets=tau_sets, BIC_factor=BIC_factor)
# summary
sum_90[[par]] <- SN_result90
sum_95[[par]] <- SN_result95
}
# BIC of the true cp at tau=0.5
BIC90_individual_model_V23_stau[par+1] <- BIC_cal_LeeNohPark_V23(y, round(cpt_relative*n), tau_sets=0.5, BIC_factor=BIC_factor)
BIC90_individual_model_V24_stau[par+1] <- BIC_cal_LeeNohPark_V24(y, round(cpt_relative*n), tau_sets=0.5, BIC_factor=BIC_factor)
BIC95_individual_model_V23_stau[par+1] <- BIC_cal_LeeNohPark_V23(y, round(cpt_relative*n), tau_sets=0.5, BIC_factor=BIC_factor)
BIC95_individual_model_V24_stau[par+1] <- BIC_cal_LeeNohPark_V24(y, round(cpt_relative*n), tau_sets=0.5, BIC_factor=BIC_factor)
# BIC of the true cp at tau=(0.1,0.5,0.9)
BIC90_individual_model_V23_mtau[par+1] <- BIC_cal_LeeNohPark_V23(y, round(cpt_relative*n), tau_sets=tau_sets, BIC_factor=BIC_factor)
BIC90_individual_model_V24_mtau[par+1] <- BIC_cal_LeeNohPark_V24(y, round(cpt_relative*n), tau_sets=tau_sets, BIC_factor=BIC_factor)
BIC95_individual_model_V23_mtau[par+1] <- BIC_cal_LeeNohPark_V23(y, round(cpt_relative*n), tau_sets=tau_sets, BIC_factor=BIC_factor)
BIC95_individual_model_V24_mtau[par+1] <- BIC_cal_LeeNohPark_V24(y, round(cpt_relative*n), tau_sets=tau_sets, BIC_factor=BIC_factor)
# Best BIC among individual models
estcp_BIC90_V23_stau <- sum_90[[which.min(BIC90_individual_model_V23_stau[1:par])]]
estcp_BIC90_V24_stau <- sum_90[[which.min(BIC90_individual_model_V24_stau[1:par])]]
estcp_BIC95_V23_stau <- sum_95[[which.min(BIC95_individual_model_V23_stau[1:par])]]
estcp_BIC95_V24_stau <- sum_95[[which.min(BIC95_individual_model_V24_stau[1:par])]]
estcp_BIC90_V23_mtau <- sum_90[[which.min(BIC90_individual_model_V23_mtau[1:par])]]
estcp_BIC90_V24_mtau <- sum_90[[which.min(BIC90_individual_model_V24_mtau[1:par])]]
estcp_BIC95_V23_mtau <- sum_95[[which.min(BIC95_individual_model_V23_mtau[1:par])]]
estcp_BIC95_V24_mtau <- sum_95[[which.min(BIC95_individual_model_V24_mtau[1:par])]]
# Multi-bandwidth BIC at tau=0.5
min_length <- round(min(parameter_list[,1])*n)
min_length
source('C:/Users/kevin/Dropbox/Research/ProjectInSNCP/SNCP_quantile/Simulation/Sensitivity_BIC/Util_BIC.R', echo=TRUE)
# Multi-bandwidth BIC at tau=0.5
min_length <- round(min(parameter_list[,1])*n)
estcp_multiband_BIC90_V23_stau <- multiband_BIC_V23(candidates=sum_90, y=y, min_length=min_length, tau_sets=0.5, BIC_factor=BIC_factor)
estcp_multiband_BIC90_V24_stau <- multiband_BIC_V24(candidates=sum_90, y=y, min_length=min_length, tau_sets=0.5, BIC_factor=BIC_factor)
estcp_multiband_BIC95_V23_stau <- multiband_BIC_V23(candidates=sum_95, y=y, min_length=min_length, tau_sets=0.5, BIC_factor=BIC_factor)
estcp_multiband_BIC95_V24_stau <- multiband_BIC_V24(candidates=sum_95, y=y, min_length=min_length, tau_sets=0.5, BIC_factor=BIC_factor)
# Multi-bandwidth BIC at tau=(0.1,0.5,0.9)
estcp_multiband_BIC90_V23_mtau <- multiband_BIC_V23(candidates=sum_90, y=y, min_length=min_length, tau_sets=tau_sets, BIC_factor=BIC_factor)
estcp_multiband_BIC90_V24_mtau <- multiband_BIC_V24(candidates=sum_90, y=y, min_length=min_length, tau_sets=tau_sets, BIC_factor=BIC_factor)
estcp_multiband_BIC95_V23_mtau <- multiband_BIC_V23(candidates=sum_95, y=y, min_length=min_length, tau_sets=tau_sets, BIC_factor=BIC_factor)
estcp_multiband_BIC95_V24_mtau <- multiband_BIC_V24(candidates=sum_95, y=y, min_length=min_length, tau_sets=tau_sets, BIC_factor=BIC_factor)
candidates=sum_90
sort(unique(unlist(sum_90)))
sum_90[[1]]
sum_90
cpt_relative*n
BIC90_individual_model_V23_stau
order( BIC90_individual_model_V23_stau)
order(BIC90_individual_model_V23_stau)
BIC90_individual_model_V23_stau[order(BIC90_individual_model_V23_stau)]
candidates
candidates[-c(1,3)]
# individual model
BIC_result_individual <- c()
num_cand <- length(candidates)
for(cand_index in 1:num_cand){
BIC_result_individual <- c(BIC_result_individual, BIC_cal_LeeNohPark_V23(y, c(0, candidates[[cand_index]], n), tau_sets, BIC_factor))
}
BIC_result_individual
which(BIC_result_individual<sort(BIC_result_individual)[4])
sort(BIC_result_individual)
# candidates_cp <- across.post.processing(breaks=candidates, n, lam=3)
candidates_cp <- unique(sort(unlist(candidates[which(BIC_result_individual<sort(BIC_result_individual)[4])])))
candidates_cp
num_para_list <- length(candidates)
num_para_list
# filtering + exhaustive search
BIC_result_multiband <- c()
candidates_cp <- unique(sort(unlist(candidates)))
num_para_list <- length(candidates)
candidates_cp
num_para_list <- length(candidates)
while(length(candidates_cp)>15 & num_para_list>1){
candidates_cp <- unique(sort(unlist(candidates[which(BIC_result_individual<sort(BIC_result_individual)[num_para_list])])))
num_para_list <- num_para_list-1
}
nnum_para_list
num_para_list
candidates_cp
length(candidates_cp)
unique(sort(unlist(candidates[which(BIC_result_individual<sort(BIC_result_individual)[num_para_list])])))
num_para_list <- 5
unique(sort(unlist(candidates[which(BIC_result_individual<sort(BIC_result_individual)[num_para_list])])))
2^15
2^14
2^12
while(length(candidates_cp)>12 & num_para_list>1){
# only select top-performing (grid, trim) by BIC to reduce consideration
candidates_cp <- unique(sort(unlist(candidates[which(BIC_result_individual<sort(BIC_result_individual)[num_para_list])])))
num_para_list <- num_para_list-1
}
n <- length(y)
# individual model
BIC_result_individual <- c()
num_cand <- length(candidates)
for(cand_index in 1:num_cand){
BIC_result_individual <- c(BIC_result_individual, BIC_cal_LeeNohPark_V23(y, c(0, candidates[[cand_index]], n), tau_sets, BIC_factor))
}
# filtering + exhaustive search
BIC_result_multiband <- c()
candidates_cp <- unique(sort(unlist(candidates)))
num_para_list <- length(candidates) # num of combination of (grid, trim)
while(length(candidates_cp)>12 & num_para_list>1){
# only select top-performing (grid, trim) by BIC to reduce consideration
candidates_cp <- unique(sort(unlist(candidates[which(BIC_result_individual<sort(BIC_result_individual)[num_para_list])])))
num_para_list <- num_para_list-1
}
candidates_cp
num_cand <- 2^length(candidates_cp)
poss_combination <- expand.grid(rep(list(0:1), length(candidates_cp)))
for(cand_index in 1:num_cand){
tmp_cand_cp <- c(0,candidates_cp[as.logical(poss_combination[cand_index,])],n)
if(min(diff(tmp_cand_cp))<min_length){
BIC_result_multiband <- c(BIC_result_multiband, Inf)
}else{
BIC_result_multiband <- c(BIC_result_multiband, BIC_cal_LeeNohPark_V23(y, tmp_cand_cp, tau_sets, BIC_factor))
}
}
# stepwise selection
previous_cp <- c(0,n)
previous_BIC_result <- BIC_cal_LeeNohPark_V23(y, previous_cp, tau_sets, BIC_factor)
current_candidates_cp <- unique(sort(unlist(candidates)))
continue <- T
while(continue){
continue <- F
num_cand <- length(current_candidates_cp)
tmp_BIC_result <- c()
for(cand_index in 1:num_cand){
current_cp <- sort(c(current_candidates_cp[cand_index], previous_cp))
if(min(diff(current_cp))<min_length){
tmp_BIC_result <- c(tmp_BIC_result, Inf)
}else{
tmp_BIC_result <- c(tmp_BIC_result, BIC_cal_LeeNohPark_V23(y, current_cp, tau_sets, BIC_factor))
}
}
current_BIC_result <- min(tmp_BIC_result)
if(current_BIC_result<previous_BIC_result){
current_candidates_cp <- current_candidates_cp[-which.min(tmp_BIC_result)]
previous_cp <- sort(c(current_candidates_cp[which.min(tmp_BIC_result)], previous_cp))
previous_BIC_result <- current_BIC_result
if(length(current_candidates_cp)>0){
continue <- T
}
}
}
# combine together
winner <- which.min(c(min(BIC_result_individual), min(BIC_result_multiband), previous_BIC_result))
min_BIC <- min(c(min(BIC_result_individual), min(BIC_result_multiband), previous_BIC_result))
min_BIC
winner
num_para_list
which(BIC_result_individual<sort(BIC_result_individual)[num_para_list]
)
BIC_result_individual
source('C:/Users/kevin/Dropbox/Research/ProjectInSNCP/SNCP_quantile/Simulation/Sensitivity_BIC/Util_BIC.R', echo=TRUE)
source("./Util_BIC.R")
j
BIC_factor <- 0
tau_sets <- c(0.1,0.5,0.9)
sum_90 <- sum_95 <- list()
BIC90_individual_model_V23_stau <- BIC90_individual_model_V24_stau <- c()
BIC95_individual_model_V23_stau <- BIC95_individual_model_V24_stau <- c()
BIC90_individual_model_V23_mtau <- BIC90_individual_model_V24_mtau <- c()
BIC95_individual_model_V23_mtau <- BIC95_individual_model_V24_mtau <- c()
y <- data[j,]
for (par in 1:nrow(parameter_list)){
grid <- parameter_list[par,1]
trim <- parameter_list[par,2]
critical_sets <- subset(critical_table, epsilon==grid&delta==trim)
critical_sets <- unlist(critical_sets)[3:5]
grid_size <- round(n*grid) # round grid size
trim_size <- ceiling(n*trim) # ceiling trim size
SN_result90 <- final_result[[j]]$result[[par]]$SN_result90
SN_result95 <- final_result[[j]]$result[[par]]$SN_result95
SN_result99 <- final_result[[j]]$result[[par]]$SN_result99
# BIC for individual models at tau=0.5
BIC90_individual_model_V23_stau[par] <- BIC_cal_LeeNohPark_V23(y, c(0,SN_result90,n), tau_sets=0.5, BIC_factor=BIC_factor)
BIC90_individual_model_V24_stau[par] <- BIC_cal_LeeNohPark_V24(y, c(0,SN_result90,n), tau_sets=0.5, BIC_factor=BIC_factor)
BIC95_individual_model_V23_stau[par] <- BIC_cal_LeeNohPark_V23(y, c(0,SN_result95,n), tau_sets=0.5, BIC_factor=BIC_factor)
BIC95_individual_model_V24_stau[par] <- BIC_cal_LeeNohPark_V24(y, c(0,SN_result95,n), tau_sets=0.5, BIC_factor=BIC_factor)
# BIC for individual models at tau=(0.1,0.5,0.9)
BIC90_individual_model_V23_mtau[par] <- BIC_cal_LeeNohPark_V23(y, c(0,SN_result90,n), tau_sets=tau_sets, BIC_factor=BIC_factor)
BIC90_individual_model_V24_mtau[par] <- BIC_cal_LeeNohPark_V24(y, c(0,SN_result90,n), tau_sets=tau_sets, BIC_factor=BIC_factor)
BIC95_individual_model_V23_mtau[par] <- BIC_cal_LeeNohPark_V23(y, c(0,SN_result95,n), tau_sets=tau_sets, BIC_factor=BIC_factor)
BIC95_individual_model_V24_mtau[par] <- BIC_cal_LeeNohPark_V24(y, c(0,SN_result95,n), tau_sets=tau_sets, BIC_factor=BIC_factor)
# summary
sum_90[[par]] <- SN_result90
sum_95[[par]] <- SN_result95
}
# BIC of the true cp at tau=0.5
BIC90_individual_model_V23_stau[par+1] <- BIC_cal_LeeNohPark_V23(y, round(cpt_relative*n), tau_sets=0.5, BIC_factor=BIC_factor)
BIC90_individual_model_V24_stau[par+1] <- BIC_cal_LeeNohPark_V24(y, round(cpt_relative*n), tau_sets=0.5, BIC_factor=BIC_factor)
BIC95_individual_model_V23_stau[par+1] <- BIC_cal_LeeNohPark_V23(y, round(cpt_relative*n), tau_sets=0.5, BIC_factor=BIC_factor)
BIC95_individual_model_V24_stau[par+1] <- BIC_cal_LeeNohPark_V24(y, round(cpt_relative*n), tau_sets=0.5, BIC_factor=BIC_factor)
# BIC of the true cp at tau=(0.1,0.5,0.9)
BIC90_individual_model_V23_mtau[par+1] <- BIC_cal_LeeNohPark_V23(y, round(cpt_relative*n), tau_sets=tau_sets, BIC_factor=BIC_factor)
BIC90_individual_model_V24_mtau[par+1] <- BIC_cal_LeeNohPark_V24(y, round(cpt_relative*n), tau_sets=tau_sets, BIC_factor=BIC_factor)
BIC95_individual_model_V23_mtau[par+1] <- BIC_cal_LeeNohPark_V23(y, round(cpt_relative*n), tau_sets=tau_sets, BIC_factor=BIC_factor)
BIC95_individual_model_V24_mtau[par+1] <- BIC_cal_LeeNohPark_V24(y, round(cpt_relative*n), tau_sets=tau_sets, BIC_factor=BIC_factor)
# Best BIC among individual models
estcp_BIC90_V23_stau <- sum_90[[which.min(BIC90_individual_model_V23_stau[1:par])]]
estcp_BIC90_V24_stau <- sum_90[[which.min(BIC90_individual_model_V24_stau[1:par])]]
estcp_BIC95_V23_stau <- sum_95[[which.min(BIC95_individual_model_V23_stau[1:par])]]
estcp_BIC95_V24_stau <- sum_95[[which.min(BIC95_individual_model_V24_stau[1:par])]]
estcp_BIC90_V23_mtau <- sum_90[[which.min(BIC90_individual_model_V23_mtau[1:par])]]
estcp_BIC90_V24_mtau <- sum_90[[which.min(BIC90_individual_model_V24_mtau[1:par])]]
estcp_BIC95_V23_mtau <- sum_95[[which.min(BIC95_individual_model_V23_mtau[1:par])]]
estcp_BIC95_V24_mtau <- sum_95[[which.min(BIC95_individual_model_V24_mtau[1:par])]]
# Multi-bandwidth BIC at tau=0.5
min_length <- round(min(parameter_list[,1])*n)
estcp_multiband_BIC90_V23_stau <- multiband_BIC_V23(candidates=sum_90, y=y, min_length=min_length, tau_sets=0.5, BIC_factor=BIC_factor)
estcp_multiband_BIC90_V24_stau <- multiband_BIC_V24(candidates=sum_90, y=y, min_length=min_length, tau_sets=0.5, BIC_factor=BIC_factor)
estcp_multiband_BIC95_V23_stau <- multiband_BIC_V23(candidates=sum_95, y=y, min_length=min_length, tau_sets=0.5, BIC_factor=BIC_factor)
estcp_multiband_BIC95_V24_stau <- multiband_BIC_V24(candidates=sum_95, y=y, min_length=min_length, tau_sets=0.5, BIC_factor=BIC_factor)
# Multi-bandwidth BIC at tau=(0.1,0.5,0.9)
estcp_multiband_BIC90_V23_mtau <- multiband_BIC_V23(candidates=sum_90, y=y, min_length=min_length, tau_sets=tau_sets, BIC_factor=BIC_factor)
estcp_multiband_BIC90_V24_mtau <- multiband_BIC_V24(candidates=sum_90, y=y, min_length=min_length, tau_sets=tau_sets, BIC_factor=BIC_factor)
estcp_multiband_BIC95_V23_mtau <- multiband_BIC_V23(candidates=sum_95, y=y, min_length=min_length, tau_sets=tau_sets, BIC_factor=BIC_factor)
estcp_multiband_BIC95_V24_mtau <- multiband_BIC_V24(candidates=sum_95, y=y, min_length=min_length, tau_sets=tau_sets, BIC_factor=BIC_factor)
# Summarize result
list(BIC_factor=BIC_factor, tau_sets=tau_sets,
# single tau at tau=0.5
BIC90_individual_model_V23_stau=BIC90_individual_model_V23_stau, BIC90_individual_model_V24_stau=BIC90_individual_model_V24_stau,
BIC95_individual_model_V23_stau=BIC95_individual_model_V23_stau, BIC95_individual_model_V24_stau=BIC95_individual_model_V24_stau,
estcp_BIC90_V23_stau=estcp_BIC90_V23_stau, estcp_BIC90_V24_stau=estcp_BIC90_V24_stau,
estcp_BIC95_V23_stau=estcp_BIC95_V23_stau, estcp_BIC95_V24_stau=estcp_BIC95_V24_stau,
estcp_multiband_BIC90_V23_stau=estcp_multiband_BIC90_V23_stau, estcp_multiband_BIC90_V24_stau=estcp_multiband_BIC90_V24_stau,
estcp_multiband_BIC95_V23_stau=estcp_multiband_BIC95_V23_stau, estcp_multiband_BIC95_V24_stau=estcp_multiband_BIC95_V24_stau,
# multiple tau at tau=(0.1,0.5,0.9)
BIC90_individual_model_V23_mtau=BIC90_individual_model_V23_mtau, BIC90_individual_model_V24_mtau=BIC90_individual_model_V24_mtau,
BIC95_individual_model_V23_mtau=BIC95_individual_model_V23_mtau, BIC95_individual_model_V24_mtau=BIC95_individual_model_V24_mtau,
estcp_BIC90_V23_mtau=estcp_BIC90_V23_mtau, estcp_BIC90_V24_mtau=estcp_BIC90_V24_mtau,
estcp_BIC95_V23_mtau=estcp_BIC95_V23_mtau, estcp_BIC95_V24_mtau=estcp_BIC95_V24_mtau,
estcp_multiband_BIC90_V23_mtau=estcp_multiband_BIC90_V23_mtau, estcp_multiband_BIC90_V24_mtau=estcp_multiband_BIC90_V24_mtau,
estcp_multiband_BIC95_V23_mtau=estcp_multiband_BIC95_V23_mtau, estcp_multiband_BIC95_V24_mtau=estcp_multiband_BIC95_V24_mtau)
cpt_relative*n
result
sum_90[[5]]
sum_90[[4]]
rm(list=ls())
source("./Util_pool.R")
source("./Util_SN.R")
source("./Util_BIC.R")
library(doParallel)
BIC_cal_LeeNohPark
BIC_cal_LeeNohPark
setwd("C:/Users/kevin/Dropbox/Research/ProjectInSNCP/SNCP_quantile/Code_for_pub/simulation")
rm(list=ls())
source("./Util_pool.R")
source("./Util_SN.R")
source("./Util_BIC.R")
BIC_cal_LeeNohPark
rm(list=ls())
source("./Util_pool.R")
source("./Util_SN.R")
source("./Util_BIC.R")
library(doParallel)
library(foreach)
library(quantreg)
# registerDoParallel(50)
### DGP
ts_settings <- list(
list(cpt_relative=c(0,0.15,0.35,0.6,0.8,1), ###Australia setting DGP3
b_slope=c(-23,-3,19,-14,-3), b0=6),
list(cpt_relative=c(0,0.1,0.4,0.6,0.8,1),   ###US setting DGP2
b_slope=c(45,-1.3,7.5,-4,6), b0=5.5),
list(cpt_relative=c(0,0.10,0.3,0.55,0.8,1), ###UK setting  DGP1
b_slope=c(26,2,-7,4,11), b0=5.8))
### generating simulation date
reptime <- 1000
n_sets <- 210
sigma_sets <- c(0.2)
rho_sets <- 0.3
parameter_list <- cbind(c(0.06,rep(c(0.08,0.1,0.12,0.15),each=2)), c(0.01,rep(c(0.01,0.02),4))) # tuning parameter (epsilon, delta)
tau_sets <- c(0.1,0.5,0.9)
hetero <- c(F,T) # heteroscedastic error
null <- c(F) # null or with change-points
critical_table <- read.csv("../SN_MultipleSlope_CriticalValue.csv")
### begin simulation
n=210
ts_settingnum=3
ts_setting <- ts_settings[[ts_settingnum]]
cpt_relative <- ts_setting$cpt_relative
b_slope <- ts_setting$b_slope
b0 <- ts_setting$b0
sigma=0.2
rho=0.3
hetero=T
if(hetero){
data <- gen_data_hetero(reptime, n, rho, sigma, cpt_relative, b_slope, b0, null=null)
}else{
data <- gen_data_homo(reptime, n, rho, sigma, cpt_relative, b_slope, b0, null=null)
}
j=1
BIC_factor <- 0.1 # strengthend BIC with (logN)^(1+BIC_factor)
result <- sum_90 <- sum_95 <- list()
BIC90_individual_model  <- c()
BIC95_individual_model  <- c()
y <- data[j,]
for (par in 1:nrow(parameter_list)){
grid <- parameter_list[par,1]
trim <- parameter_list[par,2]
critical_sets <- subset(critical_table, epsilon==grid&delta==trim)
critical_sets <- unlist(critical_sets)[3:5]
grid_size <- round(n*grid) # round grid size
trim_size <- ceiling(n*trim) # ceiling trim size
SN_sweep_result <- SN_sweep_quantile_pool(data=y, grid_size=grid_size, trim_size=trim_size, tau_sets=tau_sets)
max_SN <- max_SNsweep(SN_sweep_result)
SN_result90 <- SN_local_peak(grid_size, max_SN, critical_value=critical_sets[1])
SN_result95 <- SN_local_peak(grid_size, max_SN, critical_value=critical_sets[2])
SN_result99 <- SN_local_peak(grid_size, max_SN, critical_value=critical_sets[3])
# BIC for individual models
BIC90_individual_model[par] <- BIC_cal_LeeNohPark(y, c(0,SN_result90,n), tau_sets=tau_sets, BIC_factor=BIC_factor)
BIC95_individual_model[par] <- BIC_cal_LeeNohPark(y, c(0,SN_result95,n), tau_sets=tau_sets, BIC_factor=BIC_factor)
# summary
result[[par]] <- list(SN_result90=SN_result90, SN_result95=SN_result95, SN_result99=SN_result99)
sum_90[[par]] <- SN_result90
sum_95[[par]] <- SN_result95
}
# Best BIC among individual models
estcp_BIC90 <- result[[which.min(BIC90_individual_model[1:par])]]$SN_result90
estcp_BIC95 <- result[[which.min(BIC95_individual_model[1:par])]]$SN_result95
# Multi-bandwidth BIC
min_length <- round(min(parameter_list[,1])*n)
estcp_multiband_BIC90 <- multiband_BIC(candidates=sum_90, y=y, min_length=min_length, tau_sets=tau_sets, BIC_factor=BIC_factor)
estcp_multiband_BIC95 <- multiband_BIC(candidates=sum_95, y=y, min_length=min_length, tau_sets=tau_sets, BIC_factor=BIC_factor)
# Summarize result
list(result=result,
BIC90_individual_model=BIC90_individual_model,
BIC95_individual_model=BIC95_individual_model,
estcp_BIC90=estcp_BIC90,  estcp_BIC95=estcp_BIC95,
estcp_multiband_BIC90=estcp_multiband_BIC90,
estcp_multiband_BIC95=estcp_multiband_BIC95)
BIC90_individual_model
BIC95_individual_model
estcp_BIC90
estcp_BIC95
estcp_multiband_BIC90
estcp_multiband_BIC95
